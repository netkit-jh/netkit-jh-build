#!/usr/bin/env bash

#     Copyright 2020-2021 Adam Bromiley, Joshua Hawking - Warwick Manufacturing
#     Group, University of Warwick.
#     Copyright 2002-2007 Massimo Rimondini - Computer Networks Research Group,
#     Roma Tre University.
#
#     This file is part of Netkit.
#
#     Netkit is free software: you can redistribute it and/or modify it under
#     the terms of the GNU General Public License as published by the Free
#     Software Foundation, either version 3 of the License, or (at your option)
#     any later version.
#
#     Netkit is distributed in the hope that it will be useful, but WITHOUT ANY
#     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
#     FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
#     details.
#
#     You should have received a copy of the GNU General Public License along
#     with Netkit.  If not, see <http://www.gnu.org/licenses/>.

# Upon request, this file mounts a host directory containing kernel modules.


### BEGIN INIT INFO
# Provides:          netkit-mount-modules-dir
# Required-Start:
# Required-Stop:
# Should-Start:
# Should-Stop:
# Default-Start:     S
# Default-Stop:      0 6
# X-Start-Before:    networking netkit-phase1 module-init-tools
# X-Stop-After:      networking netkit-phase1
# Short-Description: Netkit module mount
# Description:       This is a Netkit initialization script. It is intended for
#                    usage inside virtual machines.
### END INIT INFO


###############################################################################
# Write netkit-mount-modules-dir's usage line to standard output.
# Usage:
#   usage_line
# Globals:
#   r- SCRIPTNAME
# Arguments:
#   None
# Returns:
#   None
# Example:
#   None
###############################################################################
usage_line() {
   echo "Usage: $SCRIPTNAME {start|stop}"
}


SCRIPTNAME=$(basename -- "$0")


case $1 in
   start)
      # Full command used to invoke the process
      mapfile -d "" -t kernel_cmd < "/proc/cmdline"

      for argument in "${kernel_cmd[@]:1}"; do
         opt=${argument%%=*}
         value=${argument#*=}

         if [ "$opt" = "modules" ]; then
            modules=$value
            break
         fi
      done

      if [ -n "$modules" ]; then
         modules="$modules/lib/uml/modules"
         echo "Mounting kernel modules directory '$modules' to '/lib/modules'"

         # Write access is needed for depmod in order to work properly
         mkdir --parents /lib/modules
         mount --types hostfs --options "rw,$modules" --source none --target /lib/modules/
      else
         echo "Modules directory not mounted"
      fi
      ;;
   stop)
      kernel_version=$(uname --kernel-release)
      if [ -f "/lib/modules/$kernel_version/modules.dep" ]; then
         echo "Unmounting /lib/modules"
         umount /lib/modules
      fi
      ;;
   *)
      usage_line
      exit 1
      ;;
esac
