#!/usr/bin/env bash

#     Copyright 2021 Adam Bromiley - Warwick Manufacturing Group, University of
#     Warwick.
#
#     This file is part of Netkit.
# 
#     Netkit is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
# 
#     Netkit is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
# 
#     You should have received a copy of the GNU General Public License
#     along with Netkit.  If not, see <http://www.gnu.org/licenses/>.

# Bash completion function for vstart


###############################################################################
# Bash completion function for vstart to fill the COMPREPLY array. Can
# optionally be used by other functions that have passthrough options.
# Usage:
#   _vstart [PASSTHROUGH]
# Globals:
#   r- COMP_CWORD
#   -w COMPREPLY
#   r- COMP_WORDS
# Arguments:
#   $1 - set to 1 if used for passthrough completion, otherwise pass an empty
#        string.
# Returns:
#   None
# Example:
#   None
###############################################################################
_vstart() {
   local options

   local current_word=${COMP_WORDS[COMP_CWORD]}
   local previous_word=${COMP_WORDS[COMP_CWORD - 1]}

   local con0_args=( "xterm" "this" "tmux" "pty" "port:" "none" )
   local con1_args=( "xterm" "this" "pty" "port:" "none" )
   local xterm_args=( "alacritty" "gnome" "kitty" "konsole" "konsole-tab" "wsl" "wt" "xterm" )

   mapfile -t options < <(_get_command_options vstart)
   mapfile -t options < <(_expand_eth_option "${options[@]}")

   if [ "$1" = "1" ]; then
      # Passthrough options to vstart are being autocompleted (the parent
      # command is lstart or ltest).
      # TODO: this is not perfect. In the following scenario:
      #   --pass --model-fs=./foo
      # the previous_word variable should be set to '--model-fs' because
      # COMP_WORDBREAKS usually contains an equals sign.
      previous_word=""
   fi

   # If the current word is the first argument, it cannot be an option
   # parameter.
   if [ "$COMP_CWORD" -eq 1 ]; then
      mapfile -t COMPREPLY < <(compgen -W "${options[*]}" -- "$current_word")
      return
   fi

   # If the previous word is an option, the current word will be an option
   # parameter or next option (in the case of --version, etc.).
   # If it was a non-option argument (such as a machine name), the current word
   # will be an option or another non-option argument.
   case $previous_word in
      --con0)
         mapfile -t COMPREPLY < <(compgen -W "${con0_args[*]}" -- "$current_word");;
      --con1)
         mapfile -t COMPREPLY < <(compgen -W "${con1_args[*]}" -- "$current_word");;
      -e|--exec)
         mapfile -t COMPREPLY < <(compgen -A command -- "$current_word");;
      --eth*)
         # TODO: fix this
         WORDLIST="$(vlist --no-header | awk -v FS="@ *|, *" '{for (i=2; i<=NF; i+=2) {print $i}}' | sort | uniq) tap,"
         mapfile -t COMPREPLY < <(compgen -W "$WORDLIST" -- "$current_word");;
      -f|--filesystem)
         mapfile -t COMPREPLY < <(compgen -A file -- "$current_word");;
      -k|--kernel)
         mapfile -t COMPREPLY < <(compgen -A file -- "$current_word");;
      -l|--hostlab)
         mapfile -t COMPREPLY < <(compgen -A directory -- "$current_word");;
      -m|--model-fs)
         mapfile -t COMPREPLY < <(compgen -A file -- "$current_word");;
      --xterm)
         mapfile -t COMPREPLY < <(compgen -W "${xterm_args[*]}" -- "$current_word");;
      --append|-M|--mem|--mount)
         # These options take parameters that are not autocompletable
         # TODO: might be able to autocomplete --mount
         COMPREPLY=( );;
      *)
         # These options do not take parameters, so the current word is either
         # an option or non-option argument.
         #
         # Covered options:
         # -D, --debug, --dry-run, -F, --foreground, -H, --hide-disk-file,
         # --help, --just-print, -n, --no-cow, --no-hosthome, --recon,
         # --show-boot-log, --tmux-attached, --tmux-detached, -v, --verbose,
         # --version, -W
         mapfile -t COMPREPLY < <(compgen -W "${options[*]}" -- "$current_word");;
   esac
}


# shellcheck source=../helpers
. "$NETKIT_HOME/bash-completion/helpers"

complete -F _vstart vstart
