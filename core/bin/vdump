#!/usr/bin/env bash

#     Copyright 2009 Julien Iguchi-Cartigny, XLIM Laboratory, France
#
#     This file is part of Netkit.
# 
#     Netkit is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
# 
#     Netkit is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
# 
#     You should have received a copy of the GNU General Public License
#     along with Netkit.  If not, see <http://www.gnu.org/licenses/>.

# This is the Netkit vdump script, which is used to start uml_dump.

SCRIPTNAME=$(basename "$0")

if [ -z "$NETKIT_HOME" ]; then
   echo 1>&2 "$SCRIPTNAME: The NETKIT_HOME environment variable is not set"
   exit 1
fi

# shellcheck source=./script_utils
. "$NETKIT_HOME/bin/script_utils"

# Write to the vcommands log
log_write "$0 $*"


###############################################################################
# Write vdump's usage line to standard output.
# Usage:
#   usage_line
# Globals:
#   r- SCRIPTNAME
# Arguments:
#   None
# Returns:
#   None
# Example:
#   None
###############################################################################
usage_line() {
   echo "Usage: $SCRIPTNAME DOMAIN"
}


###############################################################################
# Write vdump's usage as a full dialog or a "try --help".
# Usage:
#   usage STATUS
# Globals:
#   r- SCRIPTNAME
# Arguments:
#   $1 - status code to exit with. When zero, usage will write to standard
#        output and describe all options (for --help). Else, it will write to
#        standard error and be a brief usage and try-help message.
# Returns:
#   None - exits with a status code of STATUS
# Example:
#   None
###############################################################################
usage() {
   status=$1

   if [ "$status" -ne 0 ]; then
      usage_line 1>&2
      try_help
      exit "$status"
   fi

   cat << END_OF_HELP
$(usage_line)
  or:  $SCRIPTNAME OPTION
Dump packets from a Netkit DOMAIN (collision domain) to standard output.

$(help_option)
$(version_option)

END_OF_HELP

   exit "$status"
}


# Get command line options
LONG_OPTS="help,version"
SHORT_OPTS=""

if ! GETOPT_OPTS=$(getopt --name "$SCRIPTNAME" --options "$SHORT_OPTS" --longoptions "$LONG_OPTS" -- "$@"); then
   # getopt will output the errorneous command-line argument
   usage 1
fi

# (Safely) set positional parameters to those reordered by getopt
eval set -- "$GETOPT_OPTS"

while true; do
   case $1 in
      --help)
         usage 0
         ;;
      --version)
         show_version
         exit 0
         ;;
      --)
         shift
         break
         ;;
      *)
         echo 1>&2 "$SCRIPTNAME: Unknown error parsing command line arguments"
         usage 1
         ;;
   esac

   shift
done

if [ $# -eq 0 ]; then
   echo 1>&2 "$SCRIPTNAME: Missing collision domain name"
   usage 1
elif [ $# -gt 1 ]; then
   echo 1>&2 "$SCRIPTNAME: Can only specify one collision domain"
   usage 1
fi

hub_name=$1
if string_contains " " "$hub_name"; then
   echo 1>&2 "$SCRIPTNAME: Collision domain name cannot contain whitespace"
   exit 1
fi
shift


# check if file exist and if a pipe file
hub_socket="${HUB_SOCKET_DIR}/${HUB_SOCKET_PREFIX}_${USERID}_${hub_name}${HUB_SOCKET_EXTENSION}"

if [ ! -e "$hub_socket" ]; then
   echo 1>&2 "$SCRIPTNAME: $hub_socket: No such file or directory. Does the '$hub_name' domain exist?"
   usage 1
elif [ ! -S "$hub_socket" ]; then
   echo 1>&2 "$SCRIPTNAME: $hub_socket: File is not a socket"
   usage 1
fi

DUMP_COMMAND="uml_dump $hub_name"
COMPLETE_COMMAND=( "uml_dump" "$hub_socket" )

run_command "" "$DUMP_COMMAND" "${COMPLETE_COMMAND[@]}"
